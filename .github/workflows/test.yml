on: [push, pull_request]
name: Test
jobs:
  test-linux:
    runs-on: ubuntu-18.04
    steps:
      - run: sudo apt install -y valgrind
      - run: sudo apt install -y zip unzip
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sh cmake/GenerateMake.sh
      - run: cmake --build . --target lib3mf_memcheck
        working-directory: ./build
      - run: ctest -V
        working-directory: ./build
      - name: Archive Linux binary
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf.so
          path: build/lib3mf.so.2
      - run: zip -r bindings.zip Bindings
        working-directory: ./build/Autogenerated
      - name: Archive bindings
        uses: actions/upload-artifact@v2
        with:
          name: bindings.zip
          path: build/bindings.zip
  test-macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: sh cmake/GenerateMake.sh
      - run: cmake --build .
        working-directory: ./build
      - run: ctest -V
        working-directory: ./build
      - name: Archive Mac binary
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf.dylib
          path: build/lib3mf.dylib
  test-windows-release:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: ./cmake/GenerateVS2019.bat
      - run: cmake --build . --config Release
        working-directory: ./build
      - run: ctest -V
        working-directory: ./build
      - name: Archive Windows Release binary
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf.dll
          path: build/Release/lib3mf.dll
      - name: Archive Windows Release lib
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf.lib
          path: build/Release/lib3mf.lib
  test-windows-debug:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: ./cmake/GenerateVS2019.bat
      - run: cmake --build . --config Debug
        working-directory: ./build
      - run: ctest -V
        working-directory: ./build
      - name: Archive Windows Debug binary
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf.debug.dll
          path: build/Debug/lib3mf.dll
  test-mingw-w64:
    runs-on: windows-2019
    steps:
      - run: choco install mingw -y
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: ./cmake/GenerateMinGW.bat
      - run: cmake --build .
        working-directory: ./build
      - run: ctest -V
        working-directory: ./build
  
  build-sdk:
    runs-on: ubuntu-18.04
    needs: [test-windows-release, test-linux, test-macos]
    steps:
      - run: sudo apt install -y zip unzip
      - run: mkdir build
      - uses: actions/checkout@v2
        with:
          submodules: false
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./build
      - run: ls -R ./build
      - run: unzip bindings.zip
        working-directory: ./build
      - run: sh SDK/GenerateSDK_github.sh
      - name: Archive Windows Debug binary
        uses: actions/upload-artifact@v2
        with:
          name: lib3mf_sdk.zip
          path: build/lib3mf_sdk.zip
