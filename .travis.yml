# Configuration file for Travis CI (https://travis-ci.org)
#
# It used as a status check for all PRs and
# to generate the build-status-icon in the main README.md-file.

language: cpp
sudo: required
services:
  - docker

matrix:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      env: BUILDMODE=cmake-make-linux
      addons:
        apt:
          packages:
            - valgrind
    - os: osx
      osx_image: xcode10.1
      env: BUILDMODE=cmake-make-osx
    - os: osx
      osx_image: xcode7.2
      env: BUILDMODE=cmake-make-osx
    - os: windows
      env: BUILDMODE=windows
    - os: linux
      dist: trusty
      compiler: x86_64-w64-mingw32-g++
      env: BUILDMODE=cmake-mingw32
      addons:
        apt:
          packages:
            - gcc-mingw-w64-base
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-x86-64
            - gcc-mingw-w64
            - g++-mingw-w64-x86-64

before_script:
    - if [[ "$BUILDMODE" = "cmake-mingw32" ]]; then sh cmake/GenerateMinGW.sh; cd build; fi
    - if [[ "$BUILDMODE" = "cmake-make-linux" ]]; then sh cmake/GenerateMake.sh; cd build; fi
    - if [[ "$BUILDMODE" = "cmake-make-osx" ]]; then sh cmake/GenerateMake.sh; cd build; fi
    - if [[ "$BUILDMODE" = "windows" ]]; then cmake/GenerateVS2017.bat; cd build; fi

script:
    - if [[ "$BUILDMODE" != "ppcxenial" ]]; then cmake --build .; fi
    - if [[ "$BUILDMODE" == "cmake-make-linux" ]]; then ctest -V; cmake --build . --target lib3mf_memcheck; fi
    - if [[ "$BUILDMODE" == "cmake-make-osx" ]]; then ctest -V; fi
    - if [[ "$BUILDMODE" == "windows" ]]; then ctest -V ; fi
