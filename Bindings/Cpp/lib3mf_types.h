/*++

Copyright (C) 2018 3MF Consortium (Original Author)

All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Abstract: This is an autogenerated plain C Header file with basic types in
order to allow an easy use of the 3MF Library
Interface version: 1.2.2

*/

#ifndef __LIB3MF_TYPES_HEADER
#define __LIB3MF_TYPES_HEADER

/*************************************************************************************************************************
 General type definitions
**************************************************************************************************************************/

typedef int Lib3MFResult;
typedef void * Lib3MFHandle;

/*************************************************************************************************************************
 Error Constants for Lib3MF
**************************************************************************************************************************/

#define LIB3MF_SUCCESS 0
#define LIB3MF_ERROR_NOTIMPLEMENTED 1
#define LIB3MF_ERROR_INVALIDPARAM 2
#define LIB3MF_ERROR_INVALIDCAST 3
#define LIB3MF_ERROR_BUFFERTOOSMALL 4
#define LIB3MF_ERROR_GENERICEXCEPTION 5
#define LIB3MF_ERROR_COULDNOTLOADLIBRARY 6
#define LIB3MF_ERROR_COULDNOTFINDLIBRARYEXPORT 7

/*************************************************************************************************************************
 Declaration of handle classes 
**************************************************************************************************************************/

typedef Lib3MFHandle Lib3MF_BaseClass;
typedef Lib3MFHandle Lib3MF_Writer;
typedef Lib3MFHandle Lib3MF_Reader;
typedef Lib3MFHandle Lib3MF_Resource;
typedef Lib3MFHandle Lib3MF_ResourceIterator;
typedef Lib3MFHandle Lib3MF_PropertyHandler;
typedef Lib3MFHandle Lib3MF_DefaultPropertyHandler;
typedef Lib3MFHandle Lib3MF_MetaData;
typedef Lib3MFHandle Lib3MF_MetaDataGroup;
typedef Lib3MFHandle Lib3MF_Object;
typedef Lib3MFHandle Lib3MF_MeshObject;
typedef Lib3MFHandle Lib3MF_Component;
typedef Lib3MFHandle Lib3MF_ComponentsObject;
typedef Lib3MFHandle Lib3MF_BeamSet;
typedef Lib3MFHandle Lib3MF_BaseMaterial;
typedef Lib3MFHandle Lib3MF_Attachment;
typedef Lib3MFHandle Lib3MF_Texture2D;
typedef Lib3MFHandle Lib3MF_BuildItem;
typedef Lib3MFHandle Lib3MF_BuildItemIterator;
typedef Lib3MFHandle Lib3MF_Model;

/*************************************************************************************************************************
 Declaration of enums
**************************************************************************************************************************/

enum eLib3MFModelUnit {
    eModelUnitMicroMeter = 0,
    eModelUnitMilliMeter = 1,
    eModelUnitCentiMeter = 2,
    eModelUnitInch = 3,
    eModelUnitFoot = 4,
    eModelUnitMeter = 5
};

enum eLib3MFPropertyType {
    ePropertyTypeNone = 0,
    ePropertyTypeBaseMaterials = 1,
    ePropertyTypeColor = 2,
    ePropertyTypeTexCoord2D = 3,
    ePropertyTypeComposite = 4
};

enum eLib3MFObjectType {
    eObjectTypeOther = 0,
    eObjectTypeModel = 1,
    eObjectTypeSupport = 2,
    eObjectTypeSolidSupport = 3
};

enum eLib3MFTextureType {
    eTextureTypeUnknown = 0,
    eTextureTypePNG = 1,
    eTextureTypeJPEG = 2
};

enum eLib3MFTextureTileStyle {
    eTextureTileStyleWrap = 0,
    eTextureTileStyleMirror = 1,
    eTextureTileStyleClamp = 2,
    eTextureTileStyleNone = 3
};

enum eLib3MFTextureFilter {
    eTextureFilterAuto = 0,
    eTextureFilterLinear = 1,
    eTextureFilterNearest = 2
};

enum eLib3MFBeamLatticeCapMode {
    eBeamLatticeCapModeSphere = 0,
    eBeamLatticeCapModeHemiSphere = 1,
    eBeamLatticeCapModeButt = 2
};

enum eLib3MFBeamLatticeClipMode {
    eBeamLatticeClipModeNone = 0,
    eBeamLatticeClipModeInside = 1,
    eBeamLatticeClipModeOutside = 2
};

/*************************************************************************************************************************
 Declaration of structs
**************************************************************************************************************************/

#pragma pack (1)

typedef struct {
    unsigned int m_indices[3];
} sLib3MFTriangle;

typedef struct {
    float m_coordinates[3];
} sLib3MFPosition;

typedef struct {
    float m_Fields[4][3];
} sLib3MFTransform;

typedef struct {
    unsigned char m_Red;
    unsigned char m_Green;
    unsigned char m_Blue;
    unsigned char m_Alpha;
} sLib3MFColorRGBA;

typedef struct {
    unsigned int m_Indices[2];
    double m_Radii[2];
    eLib3MFBeamLatticeCapMode m_CapModes[2];
} sLib3MFBeam;

#pragma pack ()

#endif // __LIB3MF_TYPES_HEADER
